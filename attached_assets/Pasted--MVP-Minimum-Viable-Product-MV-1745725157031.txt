はい、承知いたしました。
ご提示いただいた要件に基づき、ドキュメント管理アプリのMVP（Minimum Viable Product）仕様書を作成します。

---

# ドキュメント管理アプリ MVP 仕様書

**バージョン:** 1.0
**作成日:** 2025年4月26日
**作成者:** Gemini

## 1. 概要

### 1.1. 目的
本ドキュメントは、開発するドキュメント管理アプリケーションのMVP（Minimum Viable Product）の仕様を定義する。
MVPは、ユーザーがマークダウン形式でドキュメントを作成・編集し、プロジェクト単位で整理し、基本的なバージョン管理機能を利用できるコア機能を提供することに焦点を当てる。

### 1.2. スコープ（対象範囲）
本仕様書は、以下のMVP機能に関する範囲を対象とする。

* プロジェクトの基本的な管理（作成、一覧表示、編集、削除）
* ドキュメントの基本的な管理（作成、一覧表示、表示、編集、削除）
* 基本的なマークダウン記法のサポート（表示・編集）
* 基本的なバージョン管理（自動保存、履歴表示、過去バージョンの表示、復元）

### 1.3. スコープ外（対象範囲外）
以下の機能はMVPの範囲外とし、将来的な拡張機能として検討する。

* ユーザー認証、会員管理、ログイン機能
* 複数ユーザー利用、権限管理
* カテゴリ機能
* 高度なマークダウン拡張（Mermaid, PlantUML, 数式など）
* 高度なバージョン管理（差分比較、コメント付け、手動バージョン作成/削除など）
* 操作ログ機能
* タグ付け、全文検索機能
* ドキュメントテンプレート機能
* リアルタイム共同編集機能
* 通知機能
* 外部連携API
* データインポート/エクスポート機能
* モバイル対応

## 2. 機能要件

### 2.1. プロジェクト管理
| ID    | 機能概要         | 詳細                                                                   | 補足                     |
| :---- | :--------------- | :--------------------------------------------------------------------- | :----------------------- |
| PRJ-1 | プロジェクト作成   | ユーザーは新しいプロジェクトを名前を指定して作成できる。                   | 名前は必須。             |
| PRJ-2 | プロジェクト一覧表示 | ユーザーは作成済みのすべてのプロジェクトを一覧で確認できる。               | 名称などでソートできると尚可 |
| PRJ-3 | プロジェクト編集   | ユーザーは既存プロジェクトの名前を変更できる。                           |                          |
| PRJ-4 | プロジェクト削除   | ユーザーは既存プロジェクトを削除できる。                                 | 削除時、紐づく文書も削除 |

### 2.2. ドキュメント管理
| ID    | 機能概要       | 詳細                                                                               | 補足                         |
| :---- | :------------- | :--------------------------------------------------------------------------------- | :--------------------------- |
| DOC-1 | ドキュメント作成 | ユーザーは指定したプロジェクト内に新しいドキュメントを作成できる。タイトルと本文を入力する。 | タイトルは必須。本文はMD形式 |
| DOC-2 | ドキュメント一覧 | ユーザーは特定のプロジェクトに属するドキュメントを一覧で確認できる。                 | タイトル、更新日時などを表示 |
| DOC-3 | ドキュメント表示 | ユーザーはドキュメントの内容を閲覧できる。本文はマークダウンからHTMLにレンダリングされる。 |                              |
| DOC-4 | ドキュメント編集 | ユーザーは既存ドキュメントのタイトルと本文（マークダウン）を編集できる。             | 編集用エディタを提供       |
| DOC-5 | ドキュメント削除 | ユーザーは既存ドキュメントを削除できる。                                           |                              |

### 2.3. マークダウンサポート
| ID   | 機能概要             | 詳細                                                                                         | 補足                           |
| :--- | :------------------- | :------------------------------------------------------------------------------------------- | :----------------------------- |
| MD-1 | 基本構文レンダリング | 見出し、リスト（順序付き・順序なし）、強調（太字、斜体）、リンク、インラインコード、コードブロックを表示時に正しくHTMLレンダリングする。 | 一般的なMarkdownパーサーを利用 |
| MD-2 | テーブルレンダリング | マークダウンのテーブル記法をHTMLのテーブルとして正しくレンダリングする。                     |                                |
| MD-3 | マークダウンエディタ | ドキュメント作成・編集画面で、マークダウンの入力に適したテキストエディタを提供する。           | シンタックスハイライトがあると望ましい |

### 2.4. バージョン管理
| ID    | 機能概要             | 詳細                                                                                     | 補足                                     |
| :---- | :------------------- | :--------------------------------------------------------------------------------------- | :--------------------------------------- |
| VER-1 | 自動バージョン作成   | ドキュメントの保存時（新規作成・編集更新）に、自動的に新しいバージョンを作成し、本文全体を保存する。 | 差分ではなくスナップショット形式。         |
| VER-2 | バージョン履歴表示   | ユーザーは特定のドキュメントのバージョン履歴（版ごとの作成日時リストなど）を確認できる。     |                                          |
| VER-3 | 過去バージョン表示   | ユーザーは履歴から特定の過去バージョンの内容を閲覧できる。（閲覧のみ、編集不可）             | 表示はMDレンダリングされた状態。         |
| VER-4 | バージョン復元（推奨） | ユーザーは過去のバージョンを選択し、その内容を現在の編集中のドキュメントに復元できる。       | 復元操作自体も新しいバージョンとして記録 |

## 3. 非機能要件（MVP）

| ID    | 要件種別 | 詳細                                                           |
| :---- | :------- | :------------------------------------------------------------- |
| NF-1  | 操作性   | ユーザーインターフェースは直感的であり、主要機能を容易に実行できること。 |
| NF-2  | 信頼性   | ドキュメントの内容やバージョンが、通常の操作で失われないこと。     |

## 4. データモデル（概念）

* **プロジェクト (Projects):**
    * `id`: 一意な識別子
    * `name`: プロジェクト名 (文字列)
    * `created_at`: 作成日時
    * `updated_at`: 更新日時
* **ドキュメント (Documents):**
    * `id`: 一意な識別子
    * `project_id`: 所属するプロジェクトのID (外部キー)
    * `title`: ドキュメントタイトル (文字列)
    * `content`: 現在のドキュメント本文 (マークダウン形式、テキスト)
    * `created_at`: 作成日時
    * `updated_at`: 最終更新日時
* **バージョン (Versions):**
    * `id`: 一意な識別子
    * `document_id`: 対象ドキュメントのID (外部キー)
    * `content`: バージョン作成時のドキュメント本文スナップショット (マークダウン形式、テキスト)
    * `created_at`: バージョン作成日時

## 5. ユーザーインターフェース（主要画面案）

* **プロジェクト一覧画面:** 全プロジェクトのリスト表示、新規プロジェクト作成ボタン。
* **プロジェクト詳細画面:** 選択したプロジェクト名表示、所属ドキュメント一覧表示、新規ドキュメント作成ボタン。
* **ドキュメント表示画面:** レンダリングされたドキュメント内容表示、編集ボタン、バージョン履歴表示ボタン。
* **ドキュメント編集画面:** マークダウンエディタ表示、タイトル入力欄、保存ボタン、キャンセルボタン。
* **バージョン履歴画面:** バージョンリスト（作成日時など）表示、各バージョンの内容表示ボタン、（推奨）復元ボタン。

---

以上がドキュメント管理アプリのMVP仕様書となります。
この仕様書を基に、開発を進めることができます。